services:
  app:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_healthy
      mongo:
        condition: service_healthy
    image: kinoubenkyou/benkyou-django
    ports:
      - 8000:8000
    secrets:
      - django_secret_key
      - postgres_password
    volumes:
      - .:/app

  celery:
    build: .
    command: celery -A benkyou_django worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    healthcheck:
      start_interval: 1s
      start_period: 5s
      test: celery -A benkyou_django inspect ping
    image: kinoubenkyou/benkyou-django
    secrets:
      - django_secret_key
      - postgres_password
    volumes:
      - .:/app

  mongo:
    healthcheck:
      start_interval: 1s
      start_period: 5s
      test: "mongosh --eval 'quit(db.runCommand({ ping: 1 }).ok === 1 ? 0 : 1)' mongo"
    image: mongo
    ports:
      - 27017:27017

  postgres:
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    healthcheck:
      start_interval: 1s
      start_period: 5s
      test: pg_isready -U postgres -d postgres
    image: postgres
    ports:
      - 5432:5432
    secrets:
      - postgres_password

  redis:
    healthcheck:
      start_interval: 1s
      start_period: 5s
      test: redis-cli ping
    image: redis
    ports:
      - 6379:6379

secrets:
  django_secret_key:
    file: django_secret_key
  postgres_password:
    file: postgres_password
