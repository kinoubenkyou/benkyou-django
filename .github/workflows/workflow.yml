on: [push]
jobs:

  build:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: set-image-id
        run: |
          docker pull ghcr.io/kinoubenkyou/benkyou-django
          image_id=$(docker image ls -q -f=reference=ghcr.io/kinoubenkyou/benkyou-django)
          echo "IMAGE_ID=$image_id" >> "$GITHUB_OUTPUT"

      - uses: docker/build-push-action@v6
        with:
          tags: ghcr.io/kinoubenkyou/benkyou-django
          load: true
          cache-from: type=registry,ref=ghcr.io/kinoubenkyou/benkyou-django:build-cache

      - id: check-image-id
        env:
          IMAGE_ID: ${{ steps.set-image-id.outputs.IMAGE_ID }}
        run: |
          image_id=$(docker image ls -q -f=reference=ghcr.io/kinoubenkyou/benkyou-django)
          if [ "$image_id" != "$IMAGE_ID" ]
          then
            echo "IMAGE_REBUILT=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: docker/build-push-action@v6
        if: ${{ steps.check-image-id.outputs.IMAGE_REBUILT == 'true' }}
        with:
          tags: ghcr.io/kinoubenkyou/benkyou-django
          push: true
          cache-to: type=registry,ref=ghcr.io/kinoubenkyou/benkyou-django:build-cache

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - run: LC_CTYPE=C tr -dc [:alnum:] < /dev/urandom | head -c 50 > django_secret_key
      - run: LC_CTYPE=C tr -dc [:alnum:] < /dev/urandom | head -c 20 > postgres_password
      - run: docker compose run --no-deps --rm app sh -c "ruff check --diff"
      - run: docker compose run --no-deps --rm app sh -c "ruff format --diff"
      - run: docker compose run --rm app sh -c "python manage.py test --failfast"
      - if: ${{ always() }}
        run: docker compose down
